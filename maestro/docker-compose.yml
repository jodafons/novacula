version: '3.8'

services:

  # Minio service
  minio:
    image: minio/minio:latest
    container_name: minio
    command: server /data --console-address :9001
    ports:
      - "9000:9000" # MinIO API port
      - "9001:9001" # MinIO Console port
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - ${MINIO_VOLUME}:/data
    restart: unless-stopped

  # Dedicated postgres app database
  app-db:
    image: postgres:13
    container_name: app-db
    environment:
      POSTGRES_USER: ${APP_DB_USER}
      POSTGRES_PASSWORD: ${APP_DB_PASSWORD}
      POSTGRES_DB: ${APP_DB_NAME}
    volumes:
      - ${APP_DB_VOLUME}:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    restart: unless-stopped

  # Dedicated postgres airflow database
  airflow-db:
    image: postgres:13
    container_name: airflow-db
    environment:
      POSTGRES_USER: ${AIRFLOW_DB_USER}
      POSTGRES_PASSWORD: ${AIRFLOW_DB_PASSWORD}
      POSTGRES_DB: ${AIRFLOW_DB_NAME}
    volumes:
      - ${AIRFLOW_DB_VOLUME}:/var/lib/postgresql/data
    restart: unless-stopped

  # Airflow services
  airflow-init:
    image: apache/airflow:latest
    container_name: airflow-init
    environment:
      # Hardcoded Airflow Configuration
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__CORE__DAGS_ARE_PAUSED_ON_UPGRADE: 'true'
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${AIRFLOW_DB_USER}:${AIRFLOW_DB_PASSWORD}@airflow-db:5432/${AIRFLOW_DB_NAME}
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW_SECRET_KEY}
      AIRFLOW__WEBSERVER__BASE_URL: http://localhost:8080
      AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth'
      _PIP_ADDITIONAL_REQUIREMENTS: ${_PIP_ADDITIONAL_REQUIREMENTS}
    entrypoint: /bin/bash
    command:
      - -c
      - |
        /usr/bin/dumb-init -- /entrypoint bash -c '
          airflow db migrate &&
          airflow users create --username ${AIRFLOW_ADMIN_USER} --firstname ${AIRFLOW_ADMIN_USER} --lastname ${AIRFLOW_ADMIN_USER} --role Admin --email ${AIRFLOW_ADMIN_EMAIL} --password ${AIRFLOW_ADMIN_PASSWORD}
        '
    volumes:
      - ${AIRFLOW_VOLUME}/dags:/opt/airflow/dags
      - ${AIRFLOW_VOLUME}/logs:/opt/airflow/logs
      - ${AIRFLOW_VOLUME}/config:/opt/airflow/config
      - ${AIRFLOW_VOLUME}/plugins:/opt/airflow/plugins
    user: "0" # Run as root for setup commands
    depends_on:
      airflow-db:
        condition: service_completed_successfully

  airflow-webserver:
    image: apache/airflow:latest
    container_name: airflow-webserver
    command: webserver
    ports:
      - "8080:8080"
    environment:
      # Hardcoded Airflow Configuration
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__CORE__DAGS_ARE_PAUSED_ON_UPGRADE: 'true'
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${AIRFLOW_DB_USER}:${AIRFLOW_DB_PASSWORD}@airflow-db:5432/${AIRFLOW_DB_NAME}
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW_SECRET_KEY}
      AIRFLOW__WEBSERVER__BASE_URL: http://localhost:8080
      AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth'
      _PIP_ADDITIONAL_REQUIREMENTS: ${_PIP_ADDITIONAL_REQUIREMENTS}
    volumes:
      - ${AIRFLOW_VOLUME}/dags:/opt/airflow/dags
      - ${AIRFLOW_VOLUME}/logs:/opt/airflow/logs
      - ${AIRFLOW_VOLUME}/config:/opt/airflow/config
      - ${AIRFLOW_VOLUME}/plugins:/opt/airflow/plugins
    user: "${AIRFLOW_UID}"
    depends_on:
      airflow-db:
        condition: service_completed_successfully
      
  airflow-scheduler:
    image: apache/airflow:latest
    container_name: airflow-scheduler
    command: scheduler
    environment:
      # Hardcoded Airflow Configuration
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__CORE__DAGS_ARE_PAUSED_ON_UPGRADE: 'true'
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${AIRFLOW_DB_USER}:${AIRFLOW_DB_PASSWORD}@airflow-db:5432/${AIRFLOW_DB_NAME}
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW_SECRET_KEY}
      AIRFLOW__WEBSERVER__BASE_URL: http://localhost:8080
      AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth'
      _PIP_ADDITIONAL_REQUIREMENTS: ${_PIP_ADDITIONAL_REQUIREMENTS}
    volumes:
      - ${AIRFLOW_VOLUME}/dags:/opt/airflow/dags
      - ${AIRFLOW_VOLUME}/logs:/opt/airflow/logs
      - ${AIRFLOW_VOLUME}/config:/opt/airflow/config
      - ${AIRFLOW_VOLUME}/plugins:/opt/airflow/plugins
    user: "${AIRFLOW_UID}"
    depends_on:
      airflow-db:
        condition: service_completed_successfully
      